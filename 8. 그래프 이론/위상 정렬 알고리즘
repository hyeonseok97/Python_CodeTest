from collections import deque # 큐를 사용하기 위한 라이브러리 호출

v, e = map(int, input().split()) # 노드, 간선의 갯수를 입력
graph = [[] for _ in range(v+1)] # 간선의 정보를 담기위한 리스트
indegree = [0]*(v+1) # 진입차수를 기록하기위한 리스트

for _ in range(e): # 모든 간선마다 출발노드 인덱스에 도착노드를 할당
    a, b = map(int, input().split())
    graph[a].append(b)
    indegree[b] += 1 # 도착노드에 진입차수 1 증가

def topology_sort(): # 위상 정렬을 위한 함수 정의
    q = deque() # 큐 정의
    result =[] # 결과를 담기위한 리스트
  
    for i in range(1, v+1):
        if indegree[i] == 0: # 진입차수가 0인 노드를 큐에 할당
            q.append(i)
    while q: # 큐가 빌 때까지
        now = q.popleft() # 큐에서 원소 하나를 추출
        result.append(now) # 결과 리스트에 할당
        for i in graph[now]: # 해당 노드에서 출발하여 도착노드 진입차수 1 감소
            indegree[i] -= 1
            if indegree[i] == 0: # 새롭게 진입차수가 0인 노드를 큐에 할당
                q.append(i)
    for i in result:
        print(i, end=' ')

topology_sort()
