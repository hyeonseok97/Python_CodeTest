# 문자열 뒤집기

# 내 코드
def find_0(array): # 연속하는 0의 시작 인덱스들을 포함한 리스트 반환하는 함수
    result = []
    if array[0] == 0:
        result.append(0)
    for i in range(1, len(array)):
        if array[i-1] == 1 and array[i] == 0:
            result.append(i)
    return result

def find_1(array): # 연속하는 1의 시작 인덱스들을 포함한 리스트 반환하는 함수
    result = []
    if array[0] == 1:
        result.append(0)
    for i in range(1, len(array)):
        if array[i-1] == 0 and array[i] == 1:
            result.append(i)
    return result

string = input()
array =  []
for i in range(len(string)):
    array.append(int(string[i]))

result_0 = find_0(array)
result_1 = find_1(array)

print(min(len(result_0), len(result_1)))

# 답안 예시

string = input() # 입력 값
count0 = 0 # 1을 0으로 바꾸는 경우
count1 = 0 # 0을 1로 바꾸는 경우
 
if string[0] == '0': # 첫 번째 값이 0인 경우 1로 바꾸는 경우를 증가, 1인 경우 0으로 바꾸는 경우를 증가
    count1 += 1
else:
    count0 += 1

for i in range(len(string) - 1): # 두 번째 원소부터 차례대로 현재 원소와 다음의 원소가 서로 다른 경우에 따라 횟수 증가
    if string[i] != string[i+1] :
        if string[i+1] == '1':
            count0 += 1
        else:
            count1 += 1

print(min(count0, count1)) # 가장 덜 바꾼 값을 
